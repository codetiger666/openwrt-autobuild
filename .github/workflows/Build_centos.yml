# This is a basic workflow to help you get started with Actions

name: Build_centos

# The type of start
on:

  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'

  # schedule:
  #   - cron: 0 10 * * *
  push:
   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

env:
  env:
  CONFIG_FILE: x86_64.conf
  DRIVE_LABLE: x86_64
  UPLOAD_RELEASE: true
  UPLOAD_FIRMWARE: true
  UPLOAD_BIN_DIR: false
  REMOVE_OLD_RELEASE: true
  REMOVE_WORKFLOW_RUNS: true
  Nginx_version: 1.19.3.1

# define workflow
jobs:
  build:
    runs-on: ubuntu-20.04

    container:
      image: centos:7
      volumes:
        - /opt/rpmbuild:/root/rpmbuild
      # options: --init /root/rpmbuild/test

    # define steps
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - name: Checkout
      #   uses: actions/checkout@main

      # - name: Initialization environment
      #   env:
      #     DEBIAN_FRONTEND: noninteractive
      #   run: |
      #     sudo rm -rf /etc/localtime
      #     sudo ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
      #     sudo apt remove php* dotnet* google* 
      #     sudo rm -rf \
      #       /usr/share/dotnet \
      #       /etc/mysql \
      #       /etc/php

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        # if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}      

      - name: build centos image
        run: |
          yum install wget perl-devel perl-ExtUtils-Embed gd-devel perl pcre-devel openssl-devel gcc gd \
          libxslt-devel libxml2-devel geoip-devel libatomic_ops-devel git rpm-build rpmdevtools make -y
          rpmdev-setuptree
          cd /opt
          git clone https://github.com/nieningproj/openwrt-autobuild.git
          /usr/bin/cp /opt/openwrt-autobuild/Customize/.rpmmacros /root
          cd /root/rpmbuild
          cp /opt/openwrt-autobuild/yumbuild/nginx/nginx.spec SPECS/
          cp /opt/openwrt-autobuild/yumbuild/nginx/nginx* SOURCES/
          cp /opt/openwrt-autobuild/yumbuild/nginx/default.conf SOURCES/
          cd SOURCES
          wget https://openresty.org/download/openresty-$Nginx_version.tar.gz
          cd ../SPECS
          sed -i "s/version11/$Nginx_version/g" nginx.spec
          rpmbuild -ba nginx.spec
          # docker pull centos:7
          # image=`docker run --privileged=true -itd -v /opt/rpmbuild:/root/rpmbuild centos:7 /bin/bash`
          # docker exec -it $image bash
          

      - name: Upload Firmware to Artifacts
        uses: actions/upload-artifact@main
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        with:
          name: nginx_centos7
          path: /opt/rpmbuild/RPMS
    

      - name: Upload Firmware to Releases
        uses: softprops/action-gh-release@v1
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: centos7_nginx
          files: /opt/rpmbuild/RPMS/x86_64/*

          
      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.REMOVE_OLD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 1
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          
      - name: Remove workflow runs
        uses: GitRML/delete-workflow-runs@main
        if: env.REMOVE_WORKFLOW_RUNS == 'true' && !cancelled()
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - name: SSH connection to Actions1
        uses: P3TERX/ssh2actions@v1.0.0
        if: failure()
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
